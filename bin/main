#!/usr/bin/env ruby
# =The network overlay system
# This is the network overlay system.
# 
# == The primary program entry point (bin/main)
# This is the main program entry point for the overlay system.
# This executable is designed to be called from capistrano,
# after which it will:
# * Grab the network configuration document from S3
# * Bootstrap the network with contained information
#   - This will contain info describing the repository to use
#   - Contains all information to configure the network 
# * Begin waiting for requests
#
# The configuration file is indexed by hostname and contains
# all needed context information as well as information with
# respect to the information repository to download and use.
#
# This expects four arguments.  They are, in order:
# * The URL of the configuration document generated from S3
# * The S3 access key
# * The S3 secret key
# * The S3 location to log overlay specific operational state
require_relative '../lib/garden'

include Garden

# Process the submitted arguments.
arguments = Util::process_args ARGF.argv

# Configure the amazon ruby SDK
Util::configure_aws arguments

# Create the factory and repository facades.
factory = Domain::ComponentFactory.new \
	:bucket_name => arguments[:bucket_name]
repository = Domain::DataRepository.new \
	:context_url => arguments[:context_url]

# # Load the current network context.
ctx = repository.get_configuration

# Obtain the system logger.  This is used for recording program
# state, not overlay actions.  For that we use the overlay
# logger.
syslog = factory.create_system_log self

# Log the current context.
syslog.info ctx

# Create the overlay log for overlay status information and
# experimental data collection.
olog = factory.create_overlay_log self

# Set to daemon mode so it will run after the capistrano task
# completes.
Process::daemon true, false

syslog.info 'setting to daemon status...'



continue = true
cnt = 0

while continue
	sleep 5
  	syslog.info "looping, loop number #{cnt}"
  	olog.info "looping, loop number #{cnt}"
	cnt += 1
	break if cnt > 5
end
